[{"D:\\Projects\\learning\\js\\reactProjects\\my-app\\src\\reportWebVitals.js":"1","D:\\Projects\\learning\\js\\reactProjects\\my-app\\src\\index.js":"2","D:\\Projects\\learning\\js\\reactProjects\\my-app\\src\\App.js":"3","D:\\Projects\\learning\\js\\reactProjects\\my-app\\src\\PersonComp\\Person.js":"4"},{"size":362,"mtime":1607415506345,"results":"5","hashOfConfig":"6"},{"size":1051,"mtime":1607665587502,"results":"7","hashOfConfig":"6"},{"size":7728,"mtime":1607674662166,"results":"8","hashOfConfig":"6"},{"size":474,"mtime":1607673907857,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"g51s34",{"filePath":"12","messages":"13","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\learning\\js\\reactProjects\\my-app\\src\\reportWebVitals.js",[],"D:\\Projects\\learning\\js\\reactProjects\\my-app\\src\\index.js",["20","21","22","23","24"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App, { HelloMess, Timer, TodoApp, MarkdownEditor, Simple } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n/* \nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n */\n\n/* ReactDOM.render(\n  <HelloMess name=\"Taylor\" />,\n  document.getElementById(\"hello-example\")\n);\n */\n\n/* ReactDOM.render(<Timer />, document.getElementById(\"hello-example\"));\n */\n\n/* ReactDOM.render(<TodoApp />, document.getElementById(\"hello-example\"));\n */\n\n/* \n\nReactDOM.render(<MarkdownEditor />, document.getElementById(\"hello-example\"));\n\n */\n\n/* \nReactDOM.render(<Simple />, document.getElementById(\"hello-example\"));\n */\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","D:\\Projects\\learning\\js\\reactProjects\\my-app\\src\\App.js",["25","26"],"import React, { Component, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Remarkable } from \"remarkable\";\n\nimport Person from \"./PersonComp/Person\";\n\n//simple without jsx\nexport class Simple extends React.Component {\n  render() {\n    return React.createElement(\n      \"div\",\n      { className: \"App\" },\n      React.createElement(\"h1\", null, \"Hey there change\")\n    );\n  }\n}\n\n//markdown\nexport class MarkdownEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.md = new Remarkable();\n    this.handleChange = this.handleChange.bind(this);\n    this.state = { value: \"Hello, **world**!\" };\n  }\n\n  handleChange(e) {\n    this.setState({ value: e.target.value });\n  }\n\n  getRawMarkup() {\n    return { __html: this.md.render(this.state.value) };\n  }\n\n  render() {\n    return (\n      <div className=\"MarkdownEditor\">\n        <h3>Input</h3>\n        <label htmlFor=\"markdown-content\">Enter some markdown</label>\n        <textarea\n          id=\"markdown-content\"\n          onChange={this.handleChange}\n          defaultValue={this.state.value}\n        />\n        <h3>Output</h3>\n        <div\n          className=\"content\"\n          dangerouslySetInnerHTML={this.getRawMarkup()}\n        />\n      </div>\n    );\n  }\n}\n\n//todo app\nexport class TodoApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { items: [], text: \"\" };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>TODO</h3>\n        <TodoList items={this.state.items} />\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"new-todo\">What needs to be done?</label>\n          <input\n            id=\"new-todo\"\n            onChange={this.handleChange}\n            value={this.state.text}\n          />\n          <button>Add #{this.state.items.length + 1}</button>\n        </form>\n      </div>\n    );\n  }\n\n  handleChange(e) {\n    this.setState({ text: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.text.length === 0) {\n      return;\n    }\n    const newItem = {\n      text: this.state.text,\n      id: Date.now(),\n    };\n    this.setState((state) => ({\n      items: state.items.concat(newItem),\n      text: \"\",\n    }));\n  }\n}\n\nclass TodoList extends React.Component {\n  render() {\n    return (\n      <ul>\n        {this.props.items.map((item) => (\n          <li key={item.id}>{item.text}</li>\n        ))}\n      </ul>\n    );\n  }\n}\n\n// helloMessage\nexport class HelloMess extends Component {\n  render() {\n    return <div>Hello {this.props.name}</div>;\n  }\n}\n\n//timer\nexport class Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { seconds: 0 };\n  }\n\n  tick() {\n    this.setState((state) => ({\n      seconds: state.seconds + 1,\n    }));\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return <div>Seconds: {this.state.seconds}</div>;\n  }\n}\n\n//custom app\nclass App extends Component {\n  state = {\n    persons: [\n      { name: \"Premnath\", age: 29 },\n      { name: \"Priyadharsini\", age: 27 },\n      { name: \"Pichaimuthu\", age: 57 },\n      { name: \"Padmavathy\", age: 42 },\n    ],\n  };\n\n  switchNameHandler = (newName) => {\n    console.log(\"was clicked!!!\");\n    //this.state.persons[0].name = \"Premnath P\";\n    this.setState({\n      persons: [\n        { name: newName, age: 29 },\n        { name: \"Priyadharsini\", age: 27 },\n        { name: \"Pichaimuthu\", age: 57 },\n        { name: \"Padmavathy\", age: 42 },\n      ],\n    });\n  };\n\n  nameChangedHandler = (event) => {\n    this.setState({\n      persons: [\n        { name: \"Premnath Pichaimuthu\", age: 29 },\n        { name: event.target.value, age: 27 },\n        { name: \"Pichaimuthu\", age: 57 },\n        { name: \"Padmavathy\", age: 42 },\n      ],\n    });\n  };\n\n  render() {\n    const styles = {\n      backgroundColor: \"white\",\n      font: \"inherit\",\n      border: \"1px solid blue\",\n      padding: \"8px\",\n      cursor: \"pointer\",\n    };\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {/* <Person name=\"Premnath\" age={29} />\n          <Person name=\"Priyadharsini\" age={27} />\n          <Person name=\"Pichaimuthu\" age={57}>\n            Hwy people\n          </Person> */}\n\n          <Person\n            name={this.state.persons[0].name}\n            age={this.state.persons[0].age}\n          />\n          <Person\n            name={this.state.persons[1].name}\n            age={this.state.persons[1].age}\n            changed={this.nameChangedHandler}\n          />\n          <Person\n            name={this.state.persons[2].name}\n            age={this.state.persons[2].age}\n            click={this.switchNameHandler.bind(this, \"Pichaimuthu Balaman\")}\n          >\n            Hwy people\n          </Person>\n          {/* <button\n            onClick={this.switchNameHandler.bind(this, \"Premnath Pichaimuthu\")}\n          > */}\n          <button\n            style={styles}\n            onClick={() => this.switchNameHandler(\"Premnath pichaimuthu!!\")}\n          >\n            Change Name\n          </button>\n        </header>\n      </div>\n    );\n  }\n}\n\n/* \nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n */\n/* function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n} */\n\n/* \nconst persons = [\n  { name: \"Premnath\", age: 29 },\n  { name: \"Priyadharsini\", age: 27 },\n  { name: \"Pichaimuthu\", age: 57 },\n  { name: \"Padmavathy\", age: 42 },\n];\n \n\nconst App = (props) => {\n  const [personState, setPersonState] = useState({\n    persons: [\n      { name: \"Premnath\", age: 29 },\n      { name: \"Priyadharsini\", age: 27 },\n      { name: \"Pichaimuthu\", age: 57 },\n      { name: \"Padmavathy\", age: 42 },\n    ],\n  });\n\n  const switchNameHandler = () => {\n    console.log(\"was clicked!!!\");\n    //this.state.persons[0].name = \"Premnath P\";\n    setPersonState({\n      persons: [\n        { name: \"Premnath Pichaimuthu\", age: 29 },\n        { name: \"Priyadharsini satyaraj\", age: 27 },\n        { name: \"Pichaimuthu\", age: 57 },\n        { name: \"Padmavathy Pichaimuthu\", age: 42 },\n      ],\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Hi I'm a React App</h1>\n      <p>This is working!</p>\n      <button onClick={switchNameHandler}>Change Name</button>\n      <div>\n        <Person\n          name={personState.persons[0].name}\n          age={personState.persons[0].age}\n        />\n        <Person\n          name={personState.persons[1].name}\n          age={personState.persons[1].age}\n        >\n          My Hobbies: Racing\n        </Person>\n        <Person\n          name={personState.persons[2].name}\n          age={personState.persons[2].age}\n        />\n      </div>\n    </div>\n  );\n};\n*/\nexport default App;\n","D:\\Projects\\learning\\js\\reactProjects\\my-app\\src\\PersonComp\\Person.js",[],{"ruleId":"27","severity":1,"message":"28","line":4,"column":15,"nodeType":"29","messageId":"30","endLine":4,"endColumn":24},{"ruleId":"27","severity":1,"message":"31","line":4,"column":26,"nodeType":"29","messageId":"30","endLine":4,"endColumn":31},{"ruleId":"27","severity":1,"message":"32","line":4,"column":33,"nodeType":"29","messageId":"30","endLine":4,"endColumn":40},{"ruleId":"27","severity":1,"message":"33","line":4,"column":42,"nodeType":"29","messageId":"30","endLine":4,"endColumn":56},{"ruleId":"27","severity":1,"message":"34","line":4,"column":58,"nodeType":"29","messageId":"30","endLine":4,"endColumn":64},{"ruleId":"27","severity":1,"message":"35","line":1,"column":28,"nodeType":"29","messageId":"30","endLine":1,"endColumn":36},{"ruleId":"27","severity":1,"message":"36","line":2,"column":8,"nodeType":"29","messageId":"30","endLine":2,"endColumn":12},"no-unused-vars","'HelloMess' is defined but never used.","Identifier","unusedVar","'Timer' is defined but never used.","'TodoApp' is defined but never used.","'MarkdownEditor' is defined but never used.","'Simple' is defined but never used.","'useState' is defined but never used.","'logo' is defined but never used."]